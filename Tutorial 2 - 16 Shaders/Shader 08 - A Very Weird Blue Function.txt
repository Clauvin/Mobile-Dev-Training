// Author: ClÃ¡uvin
// Title: Shader 08 - A Very Weird Blue Function

#ifdef GL_ES
precision mediump float;
#endif

#define PI 3.14159265359

uniform vec2 u_resolution;
uniform vec2 u_mouse;
uniform float u_time;

void drawRectangle(float start_x, float end_x, float start_y, float end_y, vec4 color){
    
    if ((gl_FragCoord.x >= start_x) && (gl_FragCoord.x <= end_x) &&
        	(gl_FragCoord.y >= start_y) && (gl_FragCoord.y <= end_y)){
        gl_FragColor = color;
    }
}

// Plot a line on Y using a value between 0.0-1.0
float plot(vec2 st, float pct){
  return  smoothstep( pct-0.02, pct, st.y) -
          smoothstep( pct, pct+0.02, st.y);
}

void main() {
	vec2 st = gl_FragCoord.xy/u_resolution;

	//float y = smoothstep(0.0, 1.0, st.x);
    //float y = smoothstep(0.2,0.5,st.x) - smoothstep(0.5,0.8,st.x);
    //float y = st.x;
    
    //sine
    
    float y = abs(sin(u_time + 4. * PI * st.x)/ 2.0);
    
    vec3 color = vec3(y);

    // Plot a line
    float pct = plot(st,y);
    color = pct*vec3(0.0,1.0,0.0);

	gl_FragColor = vec4(color,1.0);
    
    //cossine
    
    float z = abs(cos(u_time + 4. * PI * st.x) / 2.0);
    
    color = vec3(z);

    // Plot a line
    pct = plot(st,z);
    color = pct*vec3(1.0,0.0,0.0);
    
    if (color != vec3(0.0, 0.0, 0.0)){
        gl_FragColor = vec4(color,1.0);
    }
    
    //tangent
    
    float w = abs((sin(u_time + PI * st.x)/cos(u_time + 4. * PI * st.x)) / 2.0);
    
    color = vec3(w);

    // Plot a line
    pct = plot(st,w);
    color = pct*vec3(0.0,0.0,1.0);
    
    if (color != vec3(0.0, 0.0, 0.0)){
        gl_FragColor = vec4(color,1.0);
    }
    
    
}
